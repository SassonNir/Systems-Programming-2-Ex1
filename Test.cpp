/**
 * An example of how to write unit tests.
 * Use this as a basis to build a more complete Test.cpp file.
 *
 * IMPORTANT: Please write more tests - the tests here are only for example and are not complete.
 *
 * AUTHORS: Nir Sasson
 *
 * Date: 2021-02
 */
#include "doctest.h"
#include "mat.hpp"
using namespace ariel;

#include <algorithm>
#include <string>
using namespace std;

/**
 * Returns the input string without the whitespace characters: space, newline and tab.
 * Requires std=c++2a.
 */
string nospaces(string input) {
    std::erase(input, ' ');
    std::erase(input, '\t');
    std::erase(input, '\n');
    std::erase(input, '\r');
    return input;
}

/**
 * Checks good input. shoukd return the correct string.
 * Function format is mat(col, row, a, b)
 */
TEST_CASE("Good input") {
    CHECK(nospaces(mat(9, 7, '@', '-')) == nospaces("@@@@@@@@@\n"
                                                    "@-------@\n"
                                                    "@-@@@@@-@\n"
                                                    "@-@---@-@\n"
                                                    "@-@@@@@-@\n"
                                                    "@-------@\n"
                                                    "@@@@@@@@@"));
    CHECK(nospaces(mat(13, 5, '@', '-')) == nospaces("@@@@@@@@@@@@\n"
                                                     "@-----------@\n"
                                                     "@-@@@@@@@@@-@\n"
                                                     "@-----------@\n"
                                                     "@@@@@@@@@@@@"));

    CHECK(nospaces(mat(5, 9, '5', '5')) == nospaces("59995\n"
                                                    "59595\n"
                                                    "59595\n"
                                                    "59595\n"
                                                    "59595\n"
                                                    "59595\n"
                                                    "59995\n"
                                                    "55555"));
    CHECK(nospaces(mat(3, 5, 'a', 'A')) == nospaces("aaa\n"
                                                    "aAa\n"
                                                    "aAa\n"
                                                    "aAa\n"
                                                    "aaa"));
    CHECK(nospaces(mat(13, 5, 'n', 'm')) == nospaces("nnnnnnnnnnnnn\n"
                                                     "nmmmmmmmmmmmn\n"
                                                     "nmnnnnnnnnnmn\n"
                                                     "nmmmmmmmmmmmn\n"
                                                     "nnnnnnnnnnnnn\n"));
    CHECK(nospaces(mat(13, 5, '\'', ',')) == nospaces("'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''\n"
                                                      "',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'\n"
                                                      "',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''','\n"
                                                      "',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,','\n"
                                                      "',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',','\n"
                                                      "',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',','\n"
                                                      "',',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',',','\n"
                                                      "',',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',',','\n"
                                                      "',',',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',',',','\n"
                                                      "',',',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',',',','\n"
                                                      "',',',',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',',',',','\n"
                                                      "',',',',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',',',',','\n"
                                                      "',',',',',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',',',',',','\n"
                                                      "',',',',',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',',',',',','\n"
                                                      "',',',',',',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',',',',',',','\n"
                                                      "',',',',',',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',',',',',',','\n"
                                                      "',',',',',',',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',',',',',',',','\n"
                                                      "',',',',',',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',',',',',',','\n"
                                                      "',',',',',',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',',',',',',','\n"
                                                      "',',',',',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',',',',',','\n"
                                                      "',',',',',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',',',',',','\n"
                                                      "',',',',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',',',',','\n"
                                                      "',',',',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',',',',','\n"
                                                      "',',',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',',',','\n"
                                                      "',',',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',',',','\n"
                                                      "',',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',',','\n"
                                                      "',',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',',','\n"
                                                      "',',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,',','\n"
                                                      "',',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''',','\n"
                                                      "',',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,','\n"
                                                      "',''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''','\n"
                                                      "',,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,'\n"
                                                      "'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''"));
}

/**
 * Test for bad input. Should throw an exception.
 */
TEST_CASE("Bad input") {
    CHECK_THROWS(mat(10, 5, '$', '%'));
    CHECK_THROWS(mat(3, 2, '$', '%'));
    CHECK_THROWS(mat(-7, 3, '$', '%'));
    CHECK_THROWS(mat(99, 32, '$', '%'));
    CHECK_THROWS(mat(-5, -13, '$', '%'));
    CHECK_THROWS(mat(0, 0, '$', '%'));
    CHECK_THROWS(mat(0, 1, '$', '%'));
    CHECK_THROWS(mat(1, 0, '$', '%'));
}

/**
 * Test for a matrix with at least one of the dimensions 1.
 * Function format is mat(col, row, a, b) where (col or row) is 1.
 */
TEST_CASE("One dimension") {
    CHECK(nospaces(mat(1, 1, '@', '-')) == nospaces("@"));
    CHECK(nospaces(mat(1, 1, '@', '@')) == nospaces("@"));
    CHECK(nospaces(mat(1, 1, '-', '-')) == nospaces("-"));
    CHECK(nospaces(mat(1, 1, '-', '@')) == nospaces("-"));

    CHECK(nospaces(mat(1, 3, '@', '-')) == nospaces("@\n"
                                                    "@\n"
                                                    "@"));
    CHECK(nospaces(mat(3, 1, '@', '-')) == nospaces("@@@"));

    CHECK(nospaces(mat(1, 1, '@', '-')) == nospaces(mat(1, 1, '@', 'x')));

    CHECK(nospaces(mat(1, 13, '@', '-')) == nospaces("@\n"
                                                     "@\n"
                                                     "@\n"
                                                     "@\n"
                                                     "@\n"
                                                     "@\n"
                                                     "@\n"
                                                     "@\n"
                                                     "@\n"
                                                     "@\n"
                                                     "@\n"
                                                     "@\n"
                                                     "@\n"));
    CHECK(nospaces(mat(13, 1, '@', '-')) == nospaces("@@@@@@@@@@@@@\n"));
}

/**
 * Test for a matrix with equal rows and columns.
 * Function format is mat(dim, dim, a, b)
 */
TEST_CASE("SQUARE") {
    CHECK(nospaces(mat(1, 1, '@', '-')) == nospaces("@"));

    CHECK(nospaces(mat(3, 3, '@', '-')) == nospaces("@@@\n"
                                                    "@-@\n"
                                                    "@@@\n"));

    CHECK(nospaces(mat(5, 5, '@', '-')) == nospaces("@@@@@\n"
                                                    "@---@\n"
                                                    "@-@-@\n"
                                                    "@---@\n"
                                                    "@@@@@"));

    CHECK(nospaces(mat(7, 7, 'v', 'w')) == nospaces("vvvvvvv\n"
                                                    "vwwwwwv\n"
                                                    "vwvvvwv\n"
                                                    "vwvwvwv\n"
                                                    "vwvvvwv\n"
                                                    "vwwwwwv\n"
                                                    "vvvvvvv\n"));

    CHECK(nospaces(mat(9, 9, 'x', 'y')) == nospaces("xxxxxxxxx\n"
                                                    "xyyyyyyyx\n"
                                                    "xyxxxxxyx\n"
                                                    "xyxyyyxyx\n"
                                                    "xyxyxyxyx\n"
                                                    "xyxyyyxyx\n"
                                                    "xyxxxxxyx\n"
                                                    "xyyyyyyyx\n"
                                                    "xxxxxxxxx"));
}